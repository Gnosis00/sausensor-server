// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package edu.sau.sausensor.server.domain;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Mts400Results_Roo_Finder {

    public static TypedQuery<Mts400Results> Mts400Results.findMts400ResultsesByNodeidEquals(Integer nodeid) {
        if (nodeid == null) throw new IllegalArgumentException("The nodeid argument is required");
        EntityManager em = Mts400Results.entityManager();
        TypedQuery<Mts400Results> q = em.createQuery("SELECT o FROM Mts400Results AS o WHERE o.nodeid = :nodeid", Mts400Results.class);
        q.setParameter("nodeid", nodeid);
        return q;
    }
    public static TypedQuery<Mts400Results> Mts400Results.findMts400ResultsesByResultTimeBetween(String date1,String date2) {
        if (date1 == null || date2==null) throw new IllegalArgumentException("The date1 and date2 argument is required");
        EntityManager em = Mts400Results.entityManager();
        TypedQuery<Mts400Results> q = em.createQuery("SELECT o FROM Mts400Results AS o WHERE o.result_time between :date1 and :date2", Mts400Results.class);
        q.setParameter("date1", date1);
        q.setParameter("date2", date2);

        return q;
    }
}
